[{"C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\frontend\\src\\index.js":"1","C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\frontend\\src\\pages\\Body.js":"3","C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\frontend\\src\\pages\\Header.js":"4","C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\frontend\\src\\components\\Question.js":"5","C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\frontend\\src\\pages\\QuestionPage.js":"6","C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\frontend\\src\\components\\Home.js":"7","C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\frontend\\src\\components\\Result.js":"8"},{"size":585,"mtime":1611842482810,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":649,"mtime":1611666585596,"results":"12","hashOfConfig":"10"},{"size":592,"mtime":1612055794880,"results":"13","hashOfConfig":"10"},{"size":8466,"mtime":1611984508166,"results":"14","hashOfConfig":"10"},{"size":4019,"mtime":1612055151729,"results":"15","hashOfConfig":"10"},{"size":3527,"mtime":1612059995887,"results":"16","hashOfConfig":"10"},{"size":1950,"mtime":1612055088742,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1n2iuyz",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\frontend\\src\\index.js",[],["38","39"],"C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\frontend\\src\\pages\\Body.js",[],"C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\frontend\\src\\pages\\Header.js",[],"C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\frontend\\src\\components\\Question.js",["40","41"],"import \"../pages/App.css\";\r\nimport React from 'react';\r\nimport {BrowserRouter as Router, Switch, Link, Route} from \"react-router-dom\"; \r\n// import FirstQuestion from '../pages/FirstQuestion';\r\n// import SecondQuestion from '../pages/SecondQuestion';\r\n// import ThirdQuestion from '../pages/ThirdQuestion';\r\nimport QuestionPage from '../pages/QuestionPage';\r\nimport Result from './Result';\r\n\r\nclass Question extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.state = {\r\n            userAnswer : [\r\n                {'id' : 1, 'result' : 0 },{'id' : 2, 'result' : 0 },\r\n                {'id' : 3, 'result' : 0 },{'id' : 4, 'result' : 0 },\r\n                {'id' : 5, 'result' : 0 },{'id' : 6, 'result' : 0 },\r\n                {'id' : 7, 'result' : 0 },{'id' : 8, 'result' : 0 },\r\n                {'id' : 9, 'result' : 0 },{'id' : 10, 'result' : 0 },\r\n                {'id' : 11, 'result' : 0 },{'id' : 12, 'result' : 0 }],\r\n            questionArray :[\r\n                {'id' : 1, 'question' : '당신의 지금 기분은 어떤가요?' },\r\n                {'id' : 2, 'question' : '조금 더 구체적으로?' },\r\n                {'id' : 3, 'question' : '지금 기분을 유지하고 싶나요?' },\r\n                {'id' : 4, 'question' : '청소년때 학교에서 해당 과목 관련 영화를 보여주면 당신은 어떻게 행동했나요?'},\r\n                {'id' : 5, 'question' : '평소 영화, 드라마, 책의 내용에 대해 당신의 반응은 어떤가요?' },\r\n                {'id' : 6, 'question' : '평소 영화를 볼 때 더 중요하게 생각하는 것은 어떤 것인가요?' },\r\n                {'id' : 7, 'question' : '영화를 보고 난 후 주로 어떻게 행동하나요?' },\r\n                {'id' : 8, 'question' : '둘 중 어떤 종류의 캐릭터를 더 좋아하시나요?' },\r\n                {'id' : 9, 'question' : '열린 결말의 영화를 보고나서 당신은 어떤 생각을 하나요?' },\r\n                {'id' : 10, 'question' : '일이 많았던 오늘, 하루를 영화를 보면서 마무리하고싶은데 어떻게 영화를 볼까요?' },\r\n                {'id' : 11, 'question' : '복잡하고 다양한 해석이 존재하는 영화를 보고나서 당신은 어떤 생각을하나요?' },\r\n                {'id' : 12, 'question' : '영화가 어땠냐고 물어보는 친구한테 어떤 식으로 설명할 것인가요?' }] ,\r\n            selectList : [ \r\n                {'id' : 1, 'choice' : ['기쁨', '그냥', '슬픔']},\r\n                {'id' : 3, 'choice' : ['네','아니오'] },\r\n                {'id' : 4, 'choice' : ['지루한 내용이더라도 흥미있게 보는 편이었다.','지루하면 보지 않고 바로 딴 짓을 하거나 잠을 잔다.']},\r\n                {'id' : 5, 'choice' : ['주인공이나 특정 인물에 감정이입을 많이 하는 편이다.','주인공이나 특정 인물의 감정에 공감은 하지만 별개이며 허구의 이야기임을 확실히 자각하면서 본다.']},\r\n                {'id' : 6, 'choice' : ['좋은 스토리와 대사','화려하고 세련된 영상미'] },\r\n                {'id' : 7, 'choice' : ['영화의 내용이나 결말에 대해 생각하면서 곱씹어본다.','간단히 재밌었다, 재미없었다 정도만 생각하고 넘긴다.'] },\r\n                {'id' : 8, 'choice' : ['무조건 만능, 제일 강한 캐릭터','갖은 고난을 겪고 힘겹게 극복하는 대기만성형 캐릭터'] },\r\n                {'id' : 9, 'choice' : ['아 뭔가 찜찜한데... 그냥 결말을 정해주지...','내가 원하는대로 그냥 생각해야지~'] },\r\n                {'id' : 10, 'choice' : ['영화관에서 본다.','집에서 본다.'] },\r\n                {'id' : 11, 'choice' : ['영화는 머리 식힐려고 보는 것이기때문에 재밌게 보지 못했다.','다양한 해석에 신기해하고 흥미롭게 본다.'] },\r\n                {'id' : 12, 'choice' : ['내가 느낀 감정을 주 이야기로 말한다.','스토리를 설명한다.'] }] \r\n        }\r\n    }\r\n    onChange = (answer,number) => {\r\n        const {userAnswer} = this.state;\r\n            // console.log('1 number :', number);\r\n            // console.log('2 answer :', answer);\r\n            this.setState({\r\n                userAnswer : userAnswer.map( \r\n                    ans => ans.id == number\r\n                        ? ({...ans, result : answer})\r\n                        : ans)})\r\n            console.log('user Answer:', this.state.userAnswer[number-1].result);\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                \r\n                <Router>\r\n                <Switch>\r\n                    {/* <Route exact path=\"/\" render={()=> <FirstQuestion firstAns = {this.state.userAnswer[0].result} onChange = {this.onChange}/>}/>\r\n                    <Route exact path=\"/SecondQuestion\" render={()=><SecondQuestion firstAns = {this.state.userAnswer[0].result} secondAns={this.state.userAnswer[1].result} onChange ={this.onChange}/> }/>\r\n                    <Route exact path=\"/ThirdQuestion\" render={()=><ThirdQuestion thirdAns={this.state.userAnswer[2].result} onChange={this.onChange}/>} /> */}\r\n                    <Route exact path='/Question' render={()=> <QuestionPage  questionArray = {this.state.questionArray[0]} answer = {this.state.userAnswer[0].result} choiceList = {this.state.selectList[0].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-2' render={()=> <QuestionPage questionArray = {this.state.questionArray[1]} firstAns = {this.state.userAnswer[0].result} answer={this.state.userAnswer[1].result} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-3' render={()=> <QuestionPage questionArray = {this.state.questionArray[2]} answer = {this.state.userAnswer[2].result} choiceList = {this.state.selectList[1].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-4' render={()=> <QuestionPage questionArray = {this.state.questionArray[3]} answer = {this.state.userAnswer[3].result} choiceList = {this.state.selectList[2].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-5' render={()=> <QuestionPage questionArray = {this.state.questionArray[4]} answer = {this.state.userAnswer[4].result} choiceList = {this.state.selectList[3].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-6' render={()=> <QuestionPage questionArray = {this.state.questionArray[5]} answer = {this.state.userAnswer[5].result} choiceList = {this.state.selectList[4].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-7' render={()=> <QuestionPage questionArray = {this.state.questionArray[6]} answer = {this.state.userAnswer[6].result} choiceList = {this.state.selectList[5].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-8' render={()=> <QuestionPage questionArray = {this.state.questionArray[7]} answer = {this.state.userAnswer[7].result} choiceList = {this.state.selectList[6].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-9' render={()=> <QuestionPage questionArray = {this.state.questionArray[8]} answer = {this.state.userAnswer[8].result} choiceList = {this.state.selectList[7].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-10' render={()=> <QuestionPage questionArray = {this.state.questionArray[9]} answer = {this.state.userAnswer[9].result} choiceList = {this.state.selectList[8].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-11' render={()=> <QuestionPage questionArray = {this.state.questionArray[10]} answer = {this.state.userAnswer[10].result} choiceList = {this.state.selectList[9].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-12' render={()=> <QuestionPage questionArray = {this.state.questionArray[11]} answer = {this.state.userAnswer[11].result} choiceList = {this.state.selectList[10].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Result' render={()=> <Result/>}/>\r\n                </Switch>\r\n                </Router>\r\n         </div>\r\n        );                            \r\n    }\r\n}\r\n\r\nexport default Question;","C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\frontend\\src\\pages\\QuestionPage.js",["42","43","44","45","46","47"],"import React from 'react';\r\nimport {Link} from \"react-router-dom\"\r\nimport {Radio} from 'antd';\r\nimport {Button} from 'react-bootstrap'\r\n\r\nclass QuestionPage extends React.Component{\r\n    constructor(props){\r\n    super(props);\r\n    this.sliceEmotion = this.sliceEmotion.bind(this);\r\n    this.onChangeAns = this.onChangeAns.bind(this);\r\n    this.state={\r\n        answer : 0,\r\n        nextpage :['/Question-1','/Question-2','/Question-3','/Question-4','/Question-5','/Question-6',\r\n        '/Question-7','/Question-8','/Question-9','/Question-10','/Question-11','/Question-12','/Result']\r\n        }\r\n        \r\n    }\r\n    onChangeAns = (e)=>{\r\n        this.setState({answer:e.target.value})\r\n        console.log(\"questionarray id :\", this.props.questionArray.id);\r\n        this.props.onChange(e.target.value,this.props.questionArray.id);\r\n    } \r\n\r\n\r\n    sliceEmotion = (firstans,emotions)=>{\r\n        var start =0, end =0;\r\n        // console.log(\"first : \",firstans);\r\n        // console.log(\"[0]\", emotions[0]);\r\n\r\n        if(firstans == 1) { start = 0; end= 5; }\r\n        else if(firstans == 2)  {start = 5; end =12;}\r\n        else if(firstans == 3) {start = 12; end =18;}\r\n        //const emotion = emotions.filter(emo => emo.id < start && emo.id > end);\r\n        const emotion = emotions.slice(start,end);\r\n        console.log('List : ', emotion);\r\n        \r\n        return emotion;\r\n    }\r\n    render(){\r\n        if(this.props.questionArray.id == 2) {\r\n            var EmotionList = [\r\n                {id:1, emotion: '신남'},\r\n                {id:2, emotion: '설렘'},\r\n                {id:3, emotion: '편안함'},\r\n                {id:4, emotion: '만족함'},\r\n                {id:5, emotion: '활기참'},\r\n                {id:6, emotion: '귀찮음'},\r\n                {id:7, emotion: '지루함'},\r\n                {id:8, emotion: '편안함'},\r\n                {id:9, emotion: '홀가분'},\r\n                {id:10, emotion: '힐링'},\r\n                {id:11, emotion: '심심'},\r\n                {id:12, emotion: '그리움'},\r\n                {id:13, emotion: '서러움'},\r\n                {id:14, emotion: '외로움'},\r\n                {id:15, emotion: '우울함'},\r\n                {id:16, emotion: '막막함'},\r\n                {id:17, emotion: '속상함'},\r\n                {id:18, emotion: '괴로움'},\r\n            ]            \r\n            var sliceemotion = this.sliceEmotion(this.props.firstAns,EmotionList);\r\n        }\r\n            const secondAns = this.state.secondAns;\r\n\r\n            const buttonStyle={\r\n                width:400,\r\n                height:100,\r\n                margin:20, \r\n                fontSize:15,\r\n                borderRadius: 20\r\n            }\r\n\r\n        return(\r\n            <div className=\"question\">\r\n                <p style={{fontSize:\"20px\"}}>Question {this.props.questionArray.id}.</p>\r\n                <p><strong>{this.props.questionArray.question}</strong> </p>\r\n                {\r\n                    this.props.questionArray.id !== 2 &&\r\n                    <Link to= {this.state.nextpage[this.props.questionArray.id]}>\r\n                        <Radio.Group>\r\n                            {this.props.choiceList.map((m,index)=>(<div><Button variant =\"outline-danger\" style={buttonStyle} onClick={this.onChangeAns}  value = {index+1}  key ={index}> {m} </Button></div>))}\r\n                        </Radio.Group>\r\n                    </Link>\r\n                } \r\n                {\r\n                    this.props.questionArray.id == 2 &&\r\n                    <Link to= {this.state.nextpage[this.props.questionArray.id]}>\r\n                        <Radio.Group>\r\n                            {sliceemotion.map((m,index)=>(<div><Button variant =\"outline-danger\" style={buttonStyle} value={m.id} onClick={this.onChangeAns} key ={index}> {m.emotion} </Button></div>))}\r\n                        </Radio.Group>\r\n                    </Link>\r\n                }      \r\n                  \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuestionPage","C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\frontend\\src\\components\\Home.js",["48","49"],"C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\frontend\\src\\components\\Result.js",["50","51","52","53"],"import \"../pages/App.css\";\r\nimport React from \"react\";\r\nimport imgfile0 from \"../images/hear.jpg\"\r\nimport imgfile1 from '../images/about.jpg'\r\nimport imgfile2 from '../images/love.jpg'\r\nimport imgfile3 from '../images/note.jpg'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass Result extends React.Component {\r\n  render(){\r\n    return(\r\n    \r\n        <div className=\"result\">\r\n          <div className=\"recommendG\">\r\n            <h3 style={{fontSize:\"20px\"}}>\r\n              <strong>오늘은 로맨스 장르를 추천합니다.</strong>\r\n            </h3>\r\n           \r\n            <img src={imgfile0} class=\"img_heart\"></img>\r\n           \r\n          </div>\r\n\r\n          <div className=\"recommendM\">\r\n            <h3 style={{fontSize:\"20px\"}}>\r\n              <strong>이런 영화는 어떠세요?</strong>\r\n            </h3>\r\n\r\n            <div className=\"imgfile\">\r\n              <img src={imgfile1} class=\"img\"></img><a href=\"https://movie.naver.com/movie/bi/mi/basic.nhn?code=92075\" style={{fontSize:\"15px\",color:\"black\"}}><strong>어바웃타임</strong></a>\r\n            </div>\r\n            <div className=\"imgfile\">\r\n              <img src={imgfile2} class=\"img\"></img><a href=\"https://movie.naver.com/movie/bi/mi/basic.nhn?code=92075\" style={{fontSize:\"15px\", color:\"black\"}}><strong>러브 액츄얼리</strong></a>\r\n            </div>\r\n\r\n            <div className=\"imgfile\">\r\n              <img src={imgfile3} class=\"img\"></img><a href=\"https://movie.naver.com/movie/bi/mi/basic.nhn?code=92075\" style={{fontSize:\"15px\", color:\"black\"}}><strong>노트북</strong></a>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <NavLink to ={{\r\n                  pathname: \"/\"\r\n              }}>\r\n                <Button style={{width:\"200px\",marginTop:\"50px\"}} variant=\"outline-danger\">다시 하기</Button>\r\n            </NavLink>\r\n\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Result;\r\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":3,"column":42,"nodeType":"60","messageId":"61","endLine":3,"endColumn":46},{"ruleId":"62","severity":1,"message":"63","line":55,"column":35,"nodeType":"64","messageId":"65","endLine":55,"endColumn":37},{"ruleId":"62","severity":1,"message":"63","line":30,"column":21,"nodeType":"64","messageId":"65","endLine":30,"endColumn":23},{"ruleId":"62","severity":1,"message":"63","line":31,"column":26,"nodeType":"64","messageId":"65","endLine":31,"endColumn":28},{"ruleId":"62","severity":1,"message":"63","line":32,"column":26,"nodeType":"64","messageId":"65","endLine":32,"endColumn":28},{"ruleId":"62","severity":1,"message":"63","line":40,"column":40,"nodeType":"64","messageId":"65","endLine":40,"endColumn":42},{"ruleId":"58","severity":1,"message":"66","line":63,"column":19,"nodeType":"60","messageId":"61","endLine":63,"endColumn":28},{"ruleId":"62","severity":1,"message":"63","line":86,"column":49,"nodeType":"64","messageId":"65","endLine":86,"endColumn":51},{"ruleId":"58","severity":1,"message":"67","line":5,"column":8,"nodeType":"60","messageId":"61","endLine":5,"endColumn":15},{"ruleId":"68","severity":1,"message":"69","line":13,"column":13,"nodeType":"70","endLine":13,"endColumn":116},{"ruleId":"68","severity":1,"message":"69","line":20,"column":13,"nodeType":"70","endLine":20,"endColumn":51},{"ruleId":"68","severity":1,"message":"69","line":30,"column":15,"nodeType":"70","endLine":30,"endColumn":47},{"ruleId":"68","severity":1,"message":"69","line":33,"column":15,"nodeType":"70","endLine":33,"endColumn":47},{"ruleId":"68","severity":1,"message":"69","line":37,"column":15,"nodeType":"70","endLine":37,"endColumn":47},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'secondAns' is assigned a value but never used.","'imgfile' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]