[{"C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\movie\\src\\index.js":"1","C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\movie\\src\\reportWebVitals.js":"2","C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\movie\\src\\pages\\App.js":"3","C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\movie\\src\\pages\\Header.js":"4","C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\movie\\src\\pages\\Body.js":"5","C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\movie\\src\\components\\Home.js":"6","C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\movie\\src\\components\\Question.js":"7","C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\movie\\src\\components\\Result.js":"8","C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\movie\\src\\pages\\QuestionPage.js":"9"},{"size":698,"mtime":1613142774929,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":800,"mtime":1613141616668,"results":"13","hashOfConfig":"11"},{"size":592,"mtime":1612250510831,"results":"14","hashOfConfig":"11"},{"size":637,"mtime":1612254890066,"results":"15","hashOfConfig":"11"},{"size":1912,"mtime":1613202898159,"results":"16","hashOfConfig":"11"},{"size":8599,"mtime":1613999862223,"results":"17","hashOfConfig":"11"},{"size":4087,"mtime":1613999863334,"results":"18","hashOfConfig":"11"},{"size":3933,"mtime":1614086266322,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1hdzwfo",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"23"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\movie\\src\\index.js",["44","45"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './pages/Header';\nimport Body from './pages/Body';\nimport App from './pages/App'\nimport Result from './components/Result'\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <Body />\n    {/* <App /> */}\n    {/* <Result/> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();",["46","47"],"C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\movie\\src\\reportWebVitals.js",[],"C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\movie\\src\\pages\\App.js",["48"],"//django+react+db 확인\r\n\r\nimport React ,  {Component} from \"react\";\r\nimport {render} from \"react-dom\";\r\n\r\nclass App extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            posts: []\r\n          };\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n      try{\r\n        const res= await fetch(\"http://127.0.0.1:8000/movie/map_main\");\r\n        const posts = await res.json();\r\n        this.setState({\r\n          posts\r\n        });\r\n      } catch(e){\r\n          console.log(e);\r\n      }\r\n    }\r\n    \r\n      render() {\r\n        const {posts}=this.state;\r\n        if(!posts[0]){\r\n            return (<div>still waiting</div>);\r\n        }\r\n        else{\r\n            return(<div>{posts[0].movie_name}</div>);\r\n        }\r\n        \r\n      }\r\n}\r\n\r\nexport default App;","C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\movie\\src\\pages\\Header.js",[],"C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\movie\\src\\pages\\Body.js",[],"C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\movie\\src\\components\\Home.js",["49","50"],"import \"../pages/App.css\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass Home extends React.Component {\r\n  render(){\r\n    return(\r\n      <div className=\"App\">\r\n        <div style={{marginTop:\"50px\", display:\"block\"}}>\r\n            <img src=\"/images/home.png\" style={{width:\"700px\", height:\"500px\", marginBottom:\"30px\", borderRadius: \"20px\"}}></img>\r\n            <h3 style={{fontSize:\"30px\"}}>\r\n              <strong>안녕하세요, 윤태섭입니다.</strong>\r\n            </h3>\r\n            <br/>\r\n            <p style={{fontSize:\"15px\"}}>이 테스트는 자신의 <strong>장르 선호도와 오늘 감정</strong> 등과 같이<br/> 사용자의 취향을 확인하고 찾아내 <strong>영화 장르 추천</strong>을 해주는 테스트입니다. </p>\r\n            <p style={{fontSize:\"15px\"}}>총 12문항 구성으로 <strong>5분정도</strong> 소요됩니다.</p>\r\n            <NavLink to ={{\r\n                  pathname: \"/Question\"\r\n              }}>\r\n                <Button style={{width:\"200px\"}} variant=\"outline-danger\">분석 시작</Button>\r\n            </NavLink>\r\n    \r\n        </div>\r\n\r\n        <div>\r\n            <article className=\"introduce\">\r\n              <div className=\"taeseop\"><img className=\"img2\" src=\"/images/taeseop.jpg\"></img></div>\r\n              <div className=\"taeseop_t\">\r\n                <hr style={{width:\"100%\",height:\"7px\", backgroundColor:\"#FAD2D2\"}}></hr>\r\n                <p style={{marginBottom:\"10px\"}}><strong>윤태섭</strong></p>\r\n                <div style={{ fontSize: \"13px\", color:\"#bcbcbc\"}}>아주대학교 개발자 2016.02~<br/>태성고등학교 2013.02~2016.01<br/>태성중학교 2010.02~2013.01</div>\r\n                <hr></hr>\r\n              </div>\r\n            </article>\r\n            \r\n        </div>\r\n     </div>    \r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\movie\\src\\components\\Question.js",["51","52"],"import \"../pages/App.css\";\r\nimport React from 'react';\r\nimport {BrowserRouter as Router, Switch, Link, Route} from \"react-router-dom\"; \r\n// import FirstQuestion from '../pages/FirstQuestion';\r\n// import SecondQuestion from '../pages/SecondQuestion';\r\n// import ThirdQuestion from '../pages/ThirdQuestion';\r\nimport QuestionPage from '../pages/QuestionPage';\r\nimport Result from './Result';\r\nimport Home from './Home';\r\n\r\nclass Question extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.state = {\r\n            userAnswer : [\r\n                {'id' : 1, 'result' : 0 },{'id' : 2, 'result' : 0 },\r\n                {'id' : 3, 'result' : 0 },{'id' : 4, 'result' : 0 },\r\n                {'id' : 5, 'result' : 0 },{'id' : 6, 'result' : 0 },\r\n                {'id' : 7, 'result' : 0 },{'id' : 8, 'result' : 0 },\r\n                {'id' : 9, 'result' : 0 },{'id' : 10, 'result' : 0 },\r\n                {'id' : 11, 'result' : 0 },{'id' : 12, 'result' : 0 }],\r\n            questionArray :[\r\n                {'id' : 1, 'question' : '당신의 지금 기분은 어떤가요?' },\r\n                {'id' : 2, 'question' : '조금 더 구체적으로?' },\r\n                {'id' : 3, 'question' : '지금 기분을 유지하고 싶나요?' },\r\n                {'id' : 4, 'question' : '청소년때 학교에서 해당 과목 관련 영화를 보여주면 당신은 어떻게 행동했나요?'},\r\n                {'id' : 5, 'question' : '평소 영화, 드라마, 책의 내용에 대해 당신의 반응은 어떤가요?' },\r\n                {'id' : 6, 'question' : '평소 영화를 볼 때 더 중요하게 생각하는 것은 어떤 것인가요?' },\r\n                {'id' : 7, 'question' : '영화를 보고 난 후 주로 어떻게 행동하나요?' },\r\n                {'id' : 8, 'question' : '둘 중 어떤 종류의 캐릭터를 더 좋아하시나요?' },\r\n                {'id' : 9, 'question' : '열린 결말의 영화를 보고나서 당신은 어떤 생각을 하나요?' },\r\n                {'id' : 10, 'question' : '일이 많았던 오늘, 하루를 영화를 보면서 마무리하고싶은데 어떻게 영화를 볼까요?' },\r\n                {'id' : 11, 'question' : '복잡하고 다양한 해석이 존재하는 영화를 보고나서 당신은 어떤 생각을하나요?' },\r\n                {'id' : 12, 'question' : '영화가 어땠냐고 물어보는 친구한테 어떤 식으로 설명할 것인가요?' }] ,\r\n            selectList : [ \r\n                {'id' : 1, 'choice' : ['기쁨', '그냥', '슬픔']},\r\n                {'id' : 3, 'choice' : ['네','아니오'] },\r\n                {'id' : 4, 'choice' : ['지루한 내용이더라도 흥미있게 보는 편이었다.','지루하면 보지 않고 바로 딴 짓을 하거나 잠을 잔다.']},\r\n                {'id' : 5, 'choice' : ['주인공이나 특정 인물에 감정이입을 많이 하는 편이다.','주인공이나 특정 인물의 감정에 공감은 하지만 별개이며 허구의 이야기임을 확실히 자각하면서 본다.']},\r\n                {'id' : 6, 'choice' : ['좋은 스토리와 대사','화려하고 세련된 영상미'] },\r\n                {'id' : 7, 'choice' : ['영화의 내용이나 결말에 대해 생각하면서 곱씹어본다.','간단히 재밌었다, 재미없었다 정도만 생각하고 넘긴다.'] },\r\n                {'id' : 8, 'choice' : ['무조건 만능, 제일 강한 캐릭터','갖은 고난을 겪고 힘겹게 극복하는 대기만성형 캐릭터'] },\r\n                {'id' : 9, 'choice' : ['아 뭔가 찜찜한데... 그냥 결말을 정해주지...','내가 원하는대로 그냥 생각해야지~'] },\r\n                {'id' : 10, 'choice' : ['영화관에서 본다.','집에서 본다.'] },\r\n                {'id' : 11, 'choice' : ['영화는 머리 식힐려고 보는 것이기때문에 재밌게 보지 못했다.','다양한 해석에 신기해하고 흥미롭게 본다.'] },\r\n                {'id' : 12, 'choice' : ['내가 느낀 감정을 주 이야기로 말한다.','스토리를 설명한다.'] }] \r\n        }\r\n    }\r\n    onChange = (answer,number) => {\r\n        const {userAnswer} = this.state;\r\n            // console.log('1 number :', number);\r\n            // console.log('2 answer :', answer);\r\n            this.setState({\r\n                userAnswer : userAnswer.map( \r\n                    ans => ans.id == number\r\n                        ? ({...ans, result : answer})\r\n                        : ans)})\r\n            console.log('user Answer:', this.state.userAnswer[number-1].result);\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                \r\n                <Router>\r\n                <Switch>\r\n                    {/* <Route exact path=\"/\" render={()=> <FirstQuestion firstAns = {this.state.userAnswer[0].result} onChange = {this.onChange}/>}/>\r\n                    <Route exact path=\"/SecondQuestion\" render={()=><SecondQuestion firstAns = {this.state.userAnswer[0].result} secondAns={this.state.userAnswer[1].result} onChange ={this.onChange}/> }/>\r\n                    <Route exact path=\"/ThirdQuestion\" render={()=><ThirdQuestion thirdAns={this.state.userAnswer[2].result} onChange={this.onChange}/>} /> */}\r\n                    <Route exact path='/' render={()=> <Home/>}/>\r\n                    <Route exact path='/Question' render={()=> <QuestionPage  questionArray = {this.state.questionArray[0]} answer = {this.state.userAnswer[0].result} choiceList = {this.state.selectList[0].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-2' render={()=> <QuestionPage questionArray = {this.state.questionArray[1]} firstAns = {this.state.userAnswer[0].result} answer={this.state.userAnswer[1].result} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-3' render={()=> <QuestionPage questionArray = {this.state.questionArray[2]} answer = {this.state.userAnswer[2].result} choiceList = {this.state.selectList[1].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-4' render={()=> <QuestionPage questionArray = {this.state.questionArray[3]} answer = {this.state.userAnswer[3].result} choiceList = {this.state.selectList[2].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-5' render={()=> <QuestionPage questionArray = {this.state.questionArray[4]} answer = {this.state.userAnswer[4].result} choiceList = {this.state.selectList[3].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-6' render={()=> <QuestionPage questionArray = {this.state.questionArray[5]} answer = {this.state.userAnswer[5].result} choiceList = {this.state.selectList[4].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-7' render={()=> <QuestionPage questionArray = {this.state.questionArray[6]} answer = {this.state.userAnswer[6].result} choiceList = {this.state.selectList[5].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-8' render={()=> <QuestionPage questionArray = {this.state.questionArray[7]} answer = {this.state.userAnswer[7].result} choiceList = {this.state.selectList[6].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-9' render={()=> <QuestionPage questionArray = {this.state.questionArray[8]} answer = {this.state.userAnswer[8].result} choiceList = {this.state.selectList[7].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-10' render={()=> <QuestionPage questionArray = {this.state.questionArray[9]} answer = {this.state.userAnswer[9].result} choiceList = {this.state.selectList[8].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-11' render={()=> <QuestionPage questionArray = {this.state.questionArray[10]} answer = {this.state.userAnswer[10].result} choiceList = {this.state.selectList[9].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Question-12' render={()=> <QuestionPage questionArray = {this.state.questionArray[11]} answer = {this.state.userAnswer[11].result} choiceList = {this.state.selectList[10].choice} onChange = {this.onChange}/>}/>\r\n                    <Route exact path='/Result' render={()=> <Result userAnswer = {this.state.userAnswer} />}/>\r\n                </Switch>\r\n                </Router>\r\n         </div>\r\n        );                            \r\n    }\r\n}\r\n\r\nexport default Question;","C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\movie\\src\\components\\Result.js",["53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70"],"import \"../pages/App.css\";\r\nimport React from \"react\";\r\nimport Button from 'react-bootstrap/Button'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nclass Result extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        posts: []\r\n      };\r\n}\r\n\r\nasync componentDidMount() {\r\n  try{\r\n    const res= await fetch(\"movie/map_main\");\r\n    const posts = await res.json();\r\n    this.setState({\r\n      posts\r\n    });\r\n  } catch(e){\r\n      console.log(e);\r\n  }\r\n}\r\n  \r\n  render(){\r\n    const styles = theme => ({\r\n      root:{\r\n        flexWrap:'wrap',  \r\n        background:'#eeeeee',\r\n        margin:'10px auto',\r\n      },\r\n        paper:{\r\n          width: '100px',\r\n          height: '150px',\r\n          color: theme.palette.text.primary,\r\n      },\r\n    });\r\n\r\n    const {posts}=this.state;\r\n\r\n    console.log(this.props.userAnswer[0].result)\r\n    console.log(this.props.userAnswer[1].result)\r\n    console.log(this.props.userAnswer[2].result)\r\n    var decisionGenre;\r\n    if(this.props.userAnswer[0].result == 1 && this.props.userAnswer[2].result == 2){\r\n        decisionGenre = \"전쟁\";\r\n    }else if(this.props.userAnswer[0].result ==2 && this.props.userAnswer[2].result == 2){  \r\n        decisionGenre = \"로맨스\";\r\n    }else if(this.props.userAnswer[0].result == 3 && this.props.userAnswer[2].result == 2){\r\n        decisionGenre = \"코미디\";\r\n    }else if(this.props.userAnswer[3].result == 2){\r\n      decisionGenre = \"액션\";\r\n    }else if(this.props.userAnswer[4].result == 1 ){\r\n      decisionGenre = \"음악\";\r\n    }else if(this.props.userAnswer[5].result == 2 || this.props.userAnswer[7].result == 1 ){\r\n      decisionGenre = \"SF\";\r\n    }else if(this.props.userAnswer[6].result == 2 || this.props.userAnswer[7].result == 2){\r\n      decisionGenre = \"판타지\";\r\n    }else if(this.props.userAnswer[8].result == 1){\r\n      decisionGenre = \"스포츠\";\r\n    }else if(this.props.userAnswer[9].result == 1){\r\n      decisionGenre = \"스릴러\";\r\n    }else if(this.props.userAnswer[10].result == 2){\r\n      decisionGenre = \"전쟁\";\r\n    }else if(this.props.userAnswer[11].result == 1){\r\n      decisionGenre = \"음악\";\r\n    }else decisionGenre = \"코미디\";\r\n\r\n\r\n    console.log(this.props.userAnswer);\r\n    console.log(decisionGenre);\r\n    const recommendpost=this.state.posts.filter(post => post.genre.includes(decisionGenre));\r\n    \r\n    console.log(recommendpost);\r\n\r\n    const recommendMovie=\r\n          recommendpost.map(post=>\r\n            <>\r\n            <div className={styles.root}>\r\n            \r\n            {/* 이미지 경로를 src에 직접 쓰려면 public 폴더 아래(index.html과 동등하거나 하위 위치)에 있어야 함*/}\r\n\r\n            <Paper elevation={3} style={{width:\"30%\",float:\"left\",height: \"282px\",margin:\"12px\"}} className={styles.paper}>\r\n              <img src={post.img_url} class=\"img\"></img><a href={posts[0].movie_url} style={{fontSize:\"15px\",color:\"black\"}}><strong>{post.movie_name}</strong></a>\r\n            </Paper>\r\n\r\n            </div>\r\n            </>\r\n            )\r\n\r\n    if(!posts[0]){\r\n        return(\r\n          <div>still waiting</div>\r\n        );\r\n      }\r\n\r\n    else{\r\n      return(\r\n        <div className=\"result\">\r\n          <div className=\"recommendG\">\r\n            <h3 style={{fontSize:\"20px\"}}>\r\n              <strong>오늘은 {recommendpost[0].genre} 장르를 추천합니다.</strong>\r\n            </h3>\r\n          \r\n            <img src=\"/images/hear.jpg\" class=\"img_heart\"></img>\r\n          \r\n            \r\n          </div>\r\n          <div className=\"recommendM\">\r\n            <h3 style={{fontSize:\"20px\"}}>\r\n                <strong>이런 영화는 어떠세요?</strong>\r\n            </h3>\r\n            {recommendMovie}\r\n          </div>\r\n          <NavLink to ={{\r\n                  pathname: \"/\"\r\n              }}>\r\n            <Button style={{width:\"200px\",marginTop:\"50px\"}} variant=\"outline-danger\">다시 하기</Button>\r\n          </NavLink> \r\n\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Result;\r\n","C:\\Users\\djeho\\Desktop\\new_genre_recommendation_Web\\movie\\src\\pages\\QuestionPage.js",["71","72","73","74","75"],{"ruleId":"76","severity":1,"message":"77","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":11},{"ruleId":"76","severity":1,"message":"80","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":14},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"76","severity":1,"message":"85","line":4,"column":9,"nodeType":"78","messageId":"79","endLine":4,"endColumn":15},{"ruleId":"86","severity":1,"message":"87","line":11,"column":13,"nodeType":"88","endLine":11,"endColumn":124},{"ruleId":"86","severity":1,"message":"87","line":28,"column":40,"nodeType":"88","endLine":28,"endColumn":88},{"ruleId":"76","severity":1,"message":"89","line":3,"column":42,"nodeType":"78","messageId":"79","endLine":3,"endColumn":46},{"ruleId":"90","severity":1,"message":"91","line":56,"column":35,"nodeType":"92","messageId":"93","endLine":56,"endColumn":37},{"ruleId":"90","severity":1,"message":"91","line":48,"column":40,"nodeType":"92","messageId":"93","endLine":48,"endColumn":42},{"ruleId":"90","severity":1,"message":"91","line":48,"column":80,"nodeType":"92","messageId":"93","endLine":48,"endColumn":82},{"ruleId":"90","severity":1,"message":"91","line":50,"column":46,"nodeType":"92","messageId":"93","endLine":50,"endColumn":48},{"ruleId":"90","severity":1,"message":"91","line":50,"column":85,"nodeType":"92","messageId":"93","endLine":50,"endColumn":87},{"ruleId":"90","severity":1,"message":"91","line":52,"column":46,"nodeType":"92","messageId":"93","endLine":52,"endColumn":48},{"ruleId":"90","severity":1,"message":"91","line":52,"column":86,"nodeType":"92","messageId":"93","endLine":52,"endColumn":88},{"ruleId":"90","severity":1,"message":"91","line":54,"column":46,"nodeType":"92","messageId":"93","endLine":54,"endColumn":48},{"ruleId":"90","severity":1,"message":"91","line":56,"column":46,"nodeType":"92","messageId":"93","endLine":56,"endColumn":48},{"ruleId":"90","severity":1,"message":"91","line":58,"column":46,"nodeType":"92","messageId":"93","endLine":58,"endColumn":48},{"ruleId":"90","severity":1,"message":"91","line":58,"column":86,"nodeType":"92","messageId":"93","endLine":58,"endColumn":88},{"ruleId":"90","severity":1,"message":"91","line":60,"column":46,"nodeType":"92","messageId":"93","endLine":60,"endColumn":48},{"ruleId":"90","severity":1,"message":"91","line":60,"column":86,"nodeType":"92","messageId":"93","endLine":60,"endColumn":88},{"ruleId":"90","severity":1,"message":"91","line":62,"column":46,"nodeType":"92","messageId":"93","endLine":62,"endColumn":48},{"ruleId":"90","severity":1,"message":"91","line":64,"column":46,"nodeType":"92","messageId":"93","endLine":64,"endColumn":48},{"ruleId":"90","severity":1,"message":"91","line":66,"column":47,"nodeType":"92","messageId":"93","endLine":66,"endColumn":49},{"ruleId":"90","severity":1,"message":"91","line":68,"column":47,"nodeType":"92","messageId":"93","endLine":68,"endColumn":49},{"ruleId":"86","severity":1,"message":"87","line":87,"column":15,"nodeType":"88","endLine":87,"endColumn":51},{"ruleId":"86","severity":1,"message":"87","line":108,"column":13,"nodeType":"88","endLine":108,"endColumn":59},{"ruleId":"90","severity":1,"message":"91","line":31,"column":21,"nodeType":"92","messageId":"93","endLine":31,"endColumn":23},{"ruleId":"90","severity":1,"message":"91","line":32,"column":26,"nodeType":"92","messageId":"93","endLine":32,"endColumn":28},{"ruleId":"90","severity":1,"message":"91","line":33,"column":26,"nodeType":"92","messageId":"93","endLine":33,"endColumn":28},{"ruleId":"90","severity":1,"message":"91","line":41,"column":40,"nodeType":"92","messageId":"93","endLine":41,"endColumn":42},{"ruleId":"90","severity":1,"message":"91","line":90,"column":49,"nodeType":"92","messageId":"93","endLine":90,"endColumn":51},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Result' is defined but never used.","no-native-reassign",["94"],"no-negated-in-lhs",["95"],"'render' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]